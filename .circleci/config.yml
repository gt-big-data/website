version: 2
jobs:
  build:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker CLI
          command: apk update && apk add docker
      - run:
          name: Build Webserver Image
          command: docker build -t webserver:latest .
      - run:
          name: Save Image
          command: mkdir -p workspace && docker save webserver:latest > workspace/webserver.tar
      - persist_to_workspace:
          root: workspace
          paths:
            - webserver.tar
  test:
    docker:
      - image: python:3.7-alpine
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run Tests
          command: pytest -W ignore::DeprecationWarning
  deploy:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Authenticate to Google Cloud
          command: scripts/auth.sh
      - run:
          name: Connect Docker and Google Cloud
          command: gcloud auth configure-docker
      - run:
          name: Load, tag, and push Docker image to GCR
          command: |
            docker load -i /tmp/workspace/webserver.tar
            if [ "$CIRCLE_BRANCH" == "master" ]
            then
                export IMAGE_TAG="latest"
            else
                export IMAGE_TAG=$CIRCLE_BRANCH
            fi
            docker tag webserver:latest us.gcr.io/${GOOGLE_PROJECT_ID}/${CIRCLE_PROJECT_REPONAME}:$IMAGE_TAG
            docker push us.gcr.io/${GOOGLE_PROJECT_ID}/${CIRCLE_PROJECT_REPONAME}:$IMAGE_TAG
      - run: 
          name: Push image to GCR
          command: scripts/deploy.sh
  update-k8s:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout
      - run:
          name: Authenticate to Google Cloud
          command: scripts/auth.sh
      - run:
          name: Update Kubernetes Configuration
          command: scripts/update-k8s.sh


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
      - update-k8s:
          requires:
            - deploy
          filters:
            branches:
              only:
                - master
                - content-restoration
                - api-status-integration
